version: "3.9"
services:
  builder:
    image: das-api/builder
    container_name: builder
    build:
      context: .
      dockerfile: Builder.Dockerfile
  accounts-backfiller:
    container_name: accounts-backfiller
    build:
      context: .
      dockerfile: Ops.Dockerfile
    depends_on:
      - builder
      - redis
      - solana
    restart: always
    environment:
      RUST_LOG: error
      RUST_BACKTRACE: 1
    command:
      - /bin/sh
      - -c
      - |
        /usr/src/app/das-ops account program HivezrprVqHR6APKKQkkLHmUG8waZorXexEBRZWh5LRm,ChRCtrG7X5kb9YncA4wuyD68DXXL8Szt3zBCCGiioBTg,CrncyaGmZfWvpxRcpHEkSrqeeyQsdn4MAedo9KuARAc4,RSCR7UoY65mDMK8z2eCBvFmj4HSepGEY9ZjdCTiUDUA,B4DxK2DhseG2ieSqckSoSvfUbYRz6hbNfXeWwmF7dm4h,MiNESdRXUSmWY7NkAKdW9nMkjJZCaucguY3MDvkSmr6,HuntaX1CmUt5EByyFPE8pMf13SpvezybmMTtjmpmGmfj,Gui1D2TnmAqakeHfp4NNZCcpqawNVgmJxT9JBUqXgyoD --messenger-redis-url redis://redis:6379 --solana-rpc-url http://solana:8899
  transactions-backfiller:
    container_name: transactions-backfiller
    build:
      context: .
      dockerfile: Ops.Dockerfile
    depends_on:
      - builder
      - db
      - migrator
      - redis
      - solana
    restart: always
    volumes:
      - ./solana-test-validator-geyser-config/config-ingester-backfill.yml:/config.yml
    environment:
      RUST_LOG: error
      RUST_BACKTRACE: 1
    deploy:
    command:
      - /bin/sh
      - -c
      - |
        /usr/src/app/das-ops bubblegum backfill --only-trees 8CvQbUSii4WqKcezEZqH1SKtiTZoZzvLY1wtkFBiH1bi --programs HivezrprVqHR6APKKQkkLHmUG8waZorXexEBRZWh5LRm,ChRCtrG7X5kb9YncA4wuyD68DXXL8Szt3zBCCGiioBTg,CrncyaGmZfWvpxRcpHEkSrqeeyQsdn4MAedo9KuARAc4,RSCR7UoY65mDMK8z2eCBvFmj4HSepGEY9ZjdCTiUDUA,B4DxK2DhseG2ieSqckSoSvfUbYRz6hbNfXeWwmF7dm4h,MiNESdRXUSmWY7NkAKdW9nMkjJZCaucguY3MDvkSmr6,HuntaX1CmUt5EByyFPE8pMf13SpvezybmMTtjmpmGmfj,Gui1D2TnmAqakeHfp4NNZCcpqawNVgmJxT9JBUqXgyoD --database-url postgres://solana:solana@db/solana --messenger-redis-url redis://redis:6379 --solana-rpc-url http://solana:8899

  migrator:
    container_name: migrator
    depends_on:
      - db
      - builder
    environment:
      DATABASE_URL: postgres://solana:solana@db/solana
    build:
      context: .
      dockerfile: Migrator.Dockerfile
    volumes:
      - ./init.sql:/init.sql

  # load:
  #   depends_on:
  #     - migrator
  #     - ingester
  #     - builder
  #     - solana
  #   restart: always
  #   environment:
  #     KEYPAIR_SEED: "caputure the diems and stuff and then prolly take a nap and stuff"
  #     NETWORK: "local"
  #     AMOUNT_OF_CHAOS: 1
  #     RPC_URL: "http://solana:8899/"
  #   build:
  #     context: .
  #     dockerfile: Load.Dockerfile

  proxy:
    container_name: proxy
    environment:
      RUST_LOG: error
    build:
      context: .
      dockerfile: Proxy.Dockerfile
    volumes:
      - ./metaplex-rpc-proxy/envoy-compose.yaml:/etc/envoy.yaml
    ports:
      - 9091:9091
  api:
    container_name: api
    depends_on:
      - migrator
      - builder
    restart: always
    environment:
      APP_DATABASE_URL: postgres://solana:solana@db/solana
      APP_SERVER_PORT: 9090
      # APP_METRICS_PORT: 8125
      # APP_METRICS_HOST: graphite
    build:
      context: .
      dockerfile: Api.Dockerfile
    ports:
      - 9090:9090

  redis:
    image: "redis:7.0.0"
    container_name: redis
    ports:
      - "6379:6379"
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "9081:8081"

  db:
    container_name: db
    image: "postgres:14"
    restart: always
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr", "-c", "max_connections=200" ]
    ports:
      - 5439:5432
    environment:
      POSTGRES_USER: solana # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: solana # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: solana
    volumes:
      - ./db-data/:/var/lib/postgresql/data/:rw

  solana:
    image: das-geyser-grpc
    container_name: solana
    volumes:
      - ./programs:/so/:ro
      - ./ledger:/config:rw
      - ./solana-test-validator-geyser-config:/plugin-config:rw
      - ./runs.sh:/runs.sh
    environment:
      RUST_LOG: error
      PLUGIN_MESSENGER_CONFIG.messenger_type: "Redis"
      PLUGIN_MESSENGER_CONFIG.connection_config: '{redis_connection_str="redis://redis"}'
    ports:
      - "9093:8899"
      - "9094:8900"
      - "9092:8900"
      - "10000:10000"
      # - "9092:8900"
      # - "8899:8899"
      # - "8900:8900"
      # - "8901:8901"
      # - "8902:8902"
      # - "9900:9900"
      # - "8000:8000"
      # - "8001:8001"
      # - "8002:8002"
      # - "8003:8003"
      # - "8004:8004"
      # - "8005:8005"
      # - "8006:8006"
      # - "8007:8007"
      # - "8008:8008"
      # - "8009:8009"
      # - "1024:1024"
      # - "1027:1027"

  ingester:
    container_name: ingester
    depends_on:
      - migrator
      - builder
      - redis
      - db
      - solana
    restart: always
    environment:
      RUST_LOG: error
      RUST_BACKTRAC: 1
      CARGO_PKG_NAME: ingester
    build:
      context: .
      dockerfile: Ingest.Dockerfile
    volumes:
      - ./solana-test-validator-geyser-config/config-ingester.yml:/config.yml
    command: --config /config.yml ingester
    logging:
      driver: "json-file"
      options:
        max-size: 200k
        max-file: 10
    # ports:
    #   - "8874:8874"
  grpc2redis:
    container_name: grpc2redis
    depends_on:
      - redis
      - solana
      - builder
    restart: always
    environment:
      RUST_LOG: error
      RUST_BACKTRACE: 1
      CARGO_PKG_NAME: grpc2redis
    build:
      context: .
      dockerfile: Ingest.Dockerfile
    volumes:
      - ./solana-test-validator-geyser-config/config-grpc2redis.yml:/config.yml
    command: --config /config.yml grpc2redis
    logging:
      driver: "json-file"
      options:
        max-size: 200k
        max-file: 10
    # ports:
    #   - "8873:8873"
  download-metadata:
    container_name: download-metadata
    depends_on:
      - migrator
      - builder
      - db
    restart: always
    environment:
      RUST_LOG: error
      RUST_BACKTRACE: 1
      CARGO_PKG_NAME: download-metadata
    build:
      context: .
      dockerfile: Ingest.Dockerfile
    volumes:
      - ./solana-test-validator-geyser-config/config-download-metadata.yml:/config.yml
    command: --config /config.yml download-metadata
    logging:
      driver: "json-file"
      options:
        max-size: 200k
        max-file: 10
    # ports:
    #   - "8875:8875"
  prometheus:
    image: prom/prometheus
    container_name: promtetheus
    ports:
      - '9990:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules/rules.yml:/etc/prometheus/rules/rules.yml
      - das_prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=7d'
    restart: unless-stopped

  grafana:
    image: docker.io/grafana/grafana:latest
    container_name: grafana
    ports:
      - '9991:3000'
    volumes:
      - das_grafana_data:/var/lib/grafana
    restart: unless-stopped
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    command:
      - '--housekeeping_interval=55s'
      - '--docker_only=true'
      - '--disable_metrics=disk,network,tcp,udp,percpu,sched,process'
    # ports:
    #   - '8083:8080'
    volumes:
      # linux
      - /:/rootfs:ro # Needed for root file system access (even though it won't work fully on Windows)
      - /run:/run:ro # System access (won't work fully on Windows but needed)
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      # windows
      # - /:/rootfs:ro 
      # - /var/run:/var/run:ro # Access to Docker's API on Windows
      # - /sys:/sys:ro 
      # - /c/ProgramData/docker:/var/lib/docker:ro # Windows Docker directory
    devices:
      - /dev/kmsg

  alertmanager:
    image: quay.io/prometheus/alertmanager:latest
    container_name: alertmanager
    ports:
      - '9992:9093'
    volumes:
      - ./prometheus/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/data
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  das_prometheus_data:
  das_grafana_data:
  alertmanager_data:
