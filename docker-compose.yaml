version: "3.9"
services:
  builder:
    image: das-api/builder
    build:
      context: .
      dockerfile: Builder.Dockerfile
  accounts-backfiller:
    build:
      context: .
      dockerfile: Ops.Dockerfile
    depends_on:
      - builder
      - redis
      - solana
    restart: always
    environment:
      RUST_LOG: error
      RUST_BACKTRACE: 1
    command:
      - /bin/sh
      - -c
      - |
        /usr/src/app/das-ops account program HivezrprVqHR6APKKQkkLHmUG8waZorXexEBRZWh5LRm,ChRCtrG7X5kb9YncA4wuyD68DXXL8Szt3zBCCGiioBTg,CrncyaGmZfWvpxRcpHEkSrqeeyQsdn4MAedo9KuARAc4,RSCR7UoY65mDMK8z2eCBvFmj4HSepGEY9ZjdCTiUDUA,B4DxK2DhseG2ieSqckSoSvfUbYRz6hbNfXeWwmF7dm4h,MiNESdRXUSmWY7NkAKdW9nMkjJZCaucguY3MDvkSmr6,HuntaX1CmUt5EByyFPE8pMf13SpvezybmMTtjmpmGmfj,Gui1D2TnmAqakeHfp4NNZCcpqawNVgmJxT9JBUqXgyoD --messenger-redis-url redis://redis:6379 --solana-rpc-url http://solana:8899
  transactions-backfiller:
    build:
      context: .
      dockerfile: Ops.Dockerfile
    depends_on:
      - builder
      - db
      - migrator
      - redis
      - solana
    restart: always
    volumes:
      - ./solana-test-validator-geyser-config/config-ingester-backfill.yml:/config.yml
    environment:
      RUST_LOG: error
      RUST_BACKTRACE: 1
    deploy:
    command:
      - /bin/sh
      - -c
      - |
        /usr/src/app/das-ops bubblegum backfill --only-trees 8CvQbUSii4WqKcezEZqH1SKtiTZoZzvLY1wtkFBiH1bi --programs HivezrprVqHR6APKKQkkLHmUG8waZorXexEBRZWh5LRm,ChRCtrG7X5kb9YncA4wuyD68DXXL8Szt3zBCCGiioBTg,CrncyaGmZfWvpxRcpHEkSrqeeyQsdn4MAedo9KuARAc4,RSCR7UoY65mDMK8z2eCBvFmj4HSepGEY9ZjdCTiUDUA,B4DxK2DhseG2ieSqckSoSvfUbYRz6hbNfXeWwmF7dm4h,MiNESdRXUSmWY7NkAKdW9nMkjJZCaucguY3MDvkSmr6,HuntaX1CmUt5EByyFPE8pMf13SpvezybmMTtjmpmGmfj,Gui1D2TnmAqakeHfp4NNZCcpqawNVgmJxT9JBUqXgyoD --database-url postgres://solana:solana@db/solana --messenger-redis-url redis://redis:6379 --solana-rpc-url http://solana:8899

  migrator:
    depends_on:
      - db
      - builder
    environment:
      DATABASE_URL: postgres://solana:solana@db/solana
    build:
      context: .
      dockerfile: Migrator.Dockerfile
    volumes:
      - ./init.sql:/init.sql

  # load:
  #   depends_on:
  #     - migrator
  #     - ingester
  #     - builder
  #     - solana
  #   restart: always
  #   environment:
  #     KEYPAIR_SEED: "caputure the diems and stuff and then prolly take a nap and stuff"
  #     NETWORK: "local"
  #     AMOUNT_OF_CHAOS: 1
  #     RPC_URL: "http://solana:8899/"
  #   build:
  #     context: .
  #     dockerfile: Load.Dockerfile

  proxy:
    environment:
      RUST_LOG: error
    build:
      context: .
      dockerfile: Proxy.Dockerfile
    volumes:
      - ./metaplex-rpc-proxy/envoy-compose.yaml:/etc/envoy.yaml
    ports:
      - 9091:9091
  api:
    depends_on:
      - migrator
      - builder
    restart: always
    environment:
      APP_DATABASE_URL: postgres://solana:solana@db/solana
      APP_SERVER_PORT: 9090
      # APP_METRICS_PORT: 8125
      # APP_METRICS_HOST: graphite
    build:
      context: .
      dockerfile: Api.Dockerfile
    ports:
      - 9090:9090

  redis:
    image: "redis:7.0.0"
    ports:
      - "6379:6379"
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "9081:8081"

  db:
    image: "postgres:14"
    restart: always
    command:
      [
        "postgres",
        "-c",
        "log_statement=all",
        "-c",
        "log_destination=stderr",
        "-c",
        "max_connections=200",
      ]
    ports:
      - 5439:5432
    environment:
      POSTGRES_USER: solana # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: solana # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: solana
    volumes:
      - ./db-data/:/var/lib/postgresql/data/:rw

  solana:
    image: das-geyser-grpc
    volumes:
      - ./programs:/so/:ro
      - ./ledger:/config:rw
      - ./solana-test-validator-geyser-config:/plugin-config:rw
      - ./runs.sh:/runs.sh
    environment:
      RUST_LOG: error
      PLUGIN_MESSENGER_CONFIG.messenger_type: "Redis"
      PLUGIN_MESSENGER_CONFIG.connection_config: '{redis_connection_str="redis://redis"}'
    ports:
      - "9093:8899"
      - "9092:8900"
      - "10000:10000"
      # - "9092:8900"
      # - "8899:8899"
      # - "8900:8900"
      # - "8901:8901"
      # - "8902:8902"
      # - "9900:9900"
      # - "8000:8000"
      # - "8001:8001"
      # - "8002:8002"
      # - "8003:8003"
      # - "8004:8004"
      # - "8005:8005"
      # - "8006:8006"
      # - "8007:8007"
      # - "8008:8008"
      # - "8009:8009"
      # - "1024:1024"
      # - "1027:1027"

  ingester:
    depends_on:
      - migrator
      - builder
      - redis
      - db
      - solana
    restart: always
    environment:
      RUST_LOG: error
      RUST_BACKTRAC: 1
      CARGO_PKG_NAME: ingester
    build:
      context: .
      dockerfile: Ingest.Dockerfile
    volumes:
      - ./solana-test-validator-geyser-config/config-ingester.yml:/config.yml
    command: --config /config.yml ingester
    logging:
      driver: "json-file"
      options:
        max-size: 200k
        max-file: 10
  grpc2redis:
    depends_on:
      - redis
      - solana
      - builder
    restart: always
    environment:
      RUST_LOG: error
      RUST_BACKTRACE: 1
      CARGO_PKG_NAME: grpc2redis
    build:
      context: .
      dockerfile: Ingest.Dockerfile
    volumes:
      - ./solana-test-validator-geyser-config/config-grpc2redis.yml:/config.yml
    command: --config /config.yml grpc2redis
    logging:
      driver: "json-file"
      options:
        max-size: 200k
        max-file: 10
  download-metadata:
    depends_on:
      - migrator
      - builder
      - db
    restart: always
    environment:
      RUST_LOG: error
      RUST_BACKTRACE: 1
      CARGO_PKG_NAME: download-metadata
    build:
      context: .
      dockerfile: Ingest.Dockerfile
    volumes:
      - ./solana-test-validator-geyser-config/config-download-metadata.yml:/config.yml
    command: --config /config.yml download-metadata
    logging:
      driver: "json-file"
      options:
        max-size: 200k
        max-file: 10
